#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jul 25 11:07:51 2024

@author: hpc
"""

import os
import json
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Path to the directory containing your Python files
path = '/home/hpc/Desktop/B-M detection and prediction/combination of 4'
python_files = [f for f in os.listdir(path) if f.endswith('.py')]

def run_and_collect_results(path, python_files):
    results = []

    for py_file in python_files:
        # Construct the full path of the Python file
        file_path = os.path.join(path, py_file)
        
        # Use Spyder's IPython console to run the file
        globals_ = globals().copy()  # Copy the global namespace to use
        exec(open(file_path).read(), globals_)

        # Retrieve JSON output
        if 'all_model_accuracies' in globals_:
            accuracies = globals_['all_model_accuracies']
            for model, accuracy in accuracies.items():
                results.append({
                    'FeatureCombination': py_file.split('.')[0].replace('_', ' + '),
                    'Model': model,
                    'Accuracy': accuracy
                })
        else:
            print(f"Variable 'all_model_accuracies' not found in {py_file}")

    return results

# Collect results
results = run_and_collect_results(path, python_files)

# Convert results to DataFrame
df = pd.DataFrame(results)

# Save the combined DataFrame for future use
df.to_csv('combined_results.csv', index=False)

# Plotting the combined line graph
plt.figure(figsize=(14, 7))

# Define a list of colors
colors = plt.cm.tab20(np.linspace(0, 1, len(df['FeatureCombination'].unique())))

for i, feature_combination in enumerate(df['FeatureCombination'].unique()):
    subset_df = df[df['FeatureCombination'] == feature_combination]
    plt.plot(subset_df['Model'], subset_df['Accuracy'], label=feature_combination, color=colors[i])

plt.title('Model Accuracies for Different Feature Combinations')
plt.xlabel('Model')
plt.ylabel('Accuracy')
plt.legend(title='Feature Combinations')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
